# Generated by Django 2.2.3 on 2020-02-20 09:20

from django.db import migrations, models
import django.db.models.deletion
import pika.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('base', '0001_initial'),
        ('person', '0001_initial'),
        ('db', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', pika.db.fields.TMDBId(primary_key=True, serialize=False, verbose_name='TMDB Id')),
                ('imdb_id', pika.db.fields.IMDBId(blank=True, db_index=True, max_length=9, null=True, unique=True, verbose_name='IMDB Id')),
                ('title', models.CharField(max_length=256, verbose_name='Title')),
                ('rus_title', models.CharField(blank=True, max_length=256, null=True, verbose_name='Title in russian')),
                ('overview', models.CharField(blank=True, max_length=256, null=True, verbose_name='Overview')),
                ('rus_overview', models.CharField(blank=True, max_length=256, null=True, verbose_name='Overview in russian')),
                ('tagline', models.CharField(blank=True, max_length=128, null=True, verbose_name='Movie tagline')),
                ('rus_tagline', models.CharField(blank=True, max_length=128, null=True, verbose_name='Movie tagline in russian')),
                ('homepage', models.URLField(blank=True, null=True, verbose_name='Homepage')),
                ('rus_homepage', models.URLField(blank=True, null=True, verbose_name='Homepage for Russia')),
                ('adult', models.BooleanField(default=False, verbose_name='Adult')),
                ('budget', models.IntegerField(blank=True, null=True, verbose_name='Budget')),
                ('popularity', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='Popularity')),
                ('runtime', models.IntegerField(blank=True, null=True, verbose_name='Movie runtime')),
                ('revenue', models.IntegerField(blank=True, null=True, verbose_name='Movie revenue')),
                ('vote_average', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Vote average')),
                ('vote_count', models.IntegerField(default=0, verbose_name='Vote count')),
                ('release_date', models.DateField(blank=True, null=True, verbose_name='Release date')),
                ('status', models.IntegerField(choices=[(0, 'Unknown'), (1, 'Rumored'), (2, 'Planned'), (3, 'In production'), (4, 'Post production'), (5, 'Released'), (6, 'Cancelled')], default=0, verbose_name='Status')),
                ('poster', pika.db.fields.PosterImageField(blank=True, max_length=64, null=True, verbose_name='Poster')),
                ('rus_poster', pika.db.fields.PosterImageField(blank=True, max_length=64, null=True, verbose_name='Russian poster')),
                ('backdrop', pika.db.fields.BackdropImageField(blank=True, max_length=64, null=True, verbose_name='Backdrop')),
                ('rus_backdrop', pika.db.fields.BackdropImageField(blank=True, max_length=64, null=True, verbose_name='Russian backdrop')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movies', to='base.Collection', verbose_name='Collection')),
                ('genres', models.ManyToManyField(blank=True, related_name='movies', to='base.Genre', verbose_name='Genres')),
                ('keywords', models.ManyToManyField(blank=True, related_name='movies', to='base.Keyword')),
                ('original_language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movies', to='db.Language', verbose_name='Original language')),
                ('production_companies', models.ManyToManyField(blank=True, related_name='movies', to='base.Company', verbose_name='Production companies')),
                ('production_countries', models.ManyToManyField(blank=True, related_name='movies', to='db.Country', verbose_name='Production countries')),
                ('spoken_languages', models.ManyToManyField(blank=True, related_name='in_movies', to='db.Language')),
            ],
            options={
                'verbose_name': 'Movie',
                'verbose_name_plural': 'Movies',
                'db_table': 'movie',
            },
        ),
        migrations.CreateModel(
            name='MovieVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.CharField(db_index=True, max_length=32, unique=True, verbose_name='TMDB video id')),
                ('key', models.CharField(blank=True, max_length=32, null=True, verbose_name='Key')),
                ('name', models.CharField(blank=True, max_length=64, null=True, verbose_name='Video name')),
                ('size', models.IntegerField(default=-1, verbose_name='Size')),
                ('type', models.IntegerField(choices=[(0, 'Other'), (1, 'Trailer'), (2, 'Teaser'), (3, 'Clip'), (4, 'Featurette'), (5, 'Behind the Scenes'), (6, 'Bloopers')], default=6, verbose_name='Type')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='videos', to='db.Country', verbose_name='Country')),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='videos', to='db.Language', verbose_name='Language')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='movie.Movie')),
            ],
            options={
                'verbose_name': 'Movie video',
                'verbose_name_plural': 'Movie videos',
                'db_table': 'movie_video',
            },
        ),
        migrations.CreateModel(
            name='MovieReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_id', models.CharField(db_index=True, max_length=32, unique=True, verbose_name='TMDB Id')),
                ('author', models.CharField(blank=True, max_length=64, null=True, verbose_name='Author')),
                ('content', models.TextField(default='', verbose_name='Text')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Review link')),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to='db.Language', verbose_name='Language')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='movie.Movie', verbose_name='Movie')),
            ],
            options={
                'verbose_name': 'Movie review',
                'verbose_name_plural': 'Movie reviews',
                'db_table': 'movie_review',
            },
        ),
        migrations.CreateModel(
            name='MovieReleaseDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(1, 'Premiere'), (2, 'Theatrical (limited)'), (3, 'Theatrical'), (4, 'Digital'), (5, 'Physical'), (6, 'TV')], verbose_name='Release date type')),
                ('date', models.DateTimeField(verbose_name='Release date')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='releases', to='db.Country', verbose_name='Release country')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='release_dates', to='movie.Movie')),
            ],
            options={
                'verbose_name': 'Movie release',
                'verbose_name_plural': 'Movie releases',
                'db_table': 'movie_release',
            },
        ),
        migrations.CreateModel(
            name='MovieParticipant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tmdb_credit_id', models.CharField(max_length=32, verbose_name='TMDB credit ID')),
                ('character', models.CharField(blank=True, max_length=64, null=True, verbose_name='Character')),
                ('rus_character', models.CharField(blank=True, max_length=64, null=True, verbose_name='Character in russian')),
                ('job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.Job', verbose_name='Job')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='movie.Movie', verbose_name='Movie')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participants', to='person.Person', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'Movie participant',
                'verbose_name_plural': 'Movie participants',
                'db_table': 'movie_participant',
            },
        ),
    ]
